"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getFunctionName = getFunctionName;
exports.generateSnippet = generateSnippet;
const messages_enums_1 = require("./messages-enums");
const TEMPLATE = `
[function]("[definition]", function ([arguments]) {
  return "pending";
});
`.trim();
function getFunctionName(type) {
    switch (type) {
        case messages_enums_1.PickleStepType.CONTEXT:
            return "Given";
        case messages_enums_1.PickleStepType.ACTION:
            return "When";
        case messages_enums_1.PickleStepType.OUTCOME:
            return "Then";
        case messages_enums_1.PickleStepType.UNKNOWN:
            return "Given";
        default:
            throw "Unknown PickleStepType: " + type;
    }
}
function generateSnippet(expression, type, parameter) {
    const definition = expression.source
        .replace(/\\/g, "\\\\")
        .replace(/"/g, '\\"');
    const stepParameterNames = parameter ? [parameter] : [];
    const args = expression.parameterNames.concat(stepParameterNames).join(", ");
    return TEMPLATE.replace("[function]", getFunctionName(type))
        .replace("[definition]", definition)
        .replace("[arguments]", args);
}
